#include<stdio.h>
NEW_LINE
#include<stdlib.h>
NEW_LINE
#include<string.h>
NEW_LINE

NEW_LINE
int
BLANK_SPACE
a;
NEW_LINE

NEW_LINE

NEW_LINE

NEW_LINE

NEW_LINE

NEW_LINE

NEW_LINE
class
BLANK_SPACE
A
BLANK_SPACE
{
NEW_LINE
int
BLANK_SPACE
a;
NEW_LINE
int
BLANK_SPACE
a(int
BLANK_SPACE
b);
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
void
BLANK_SPACE
print1(int
BLANK_SPACE
a)
BLANK_SPACE
{
NEW_LINE

TAB_ULAR

TAB_ULAR
//
BLANK_SPACE
print
BLANK_SPACE
parameter
BLANK_SPACE
-
BLANK_SPACE
local
BLANK_SPACE
to
BLANK_SPACE
the
BLANK_SPACE
function
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
printf("output
BLANK_SPACE
should
BLANK_SPACE
be
BLANK_SPACE
1:
BLANK_SPACE
%d\n",
BLANK_SPACE
a);
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
}
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
void
BLANK_SPACE
print2()
BLANK_SPACE
{
NEW_LINE

TAB_ULAR

TAB_ULAR
//
BLANK_SPACE
create
BLANK_SPACE
a
BLANK_SPACE
local
BLANK_SPACE
variable
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
int
BLANK_SPACE
a
BLANK_SPACE
=
BLANK_SPACE
2;
NEW_LINE

TAB_ULAR

TAB_ULAR
//
BLANK_SPACE
print
BLANK_SPACE
local
BLANK_SPACE
variable
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
printf("output
BLANK_SPACE
should
BLANK_SPACE
be
BLANK_SPACE
2:
BLANK_SPACE
%d\n",
BLANK_SPACE
a);
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
}
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
void
BLANK_SPACE
print3()
BLANK_SPACE
{
NEW_LINE

TAB_ULAR

TAB_ULAR
//
BLANK_SPACE
there
BLANK_SPACE
is
BLANK_SPACE
a
BLANK_SPACE
class
BLANK_SPACE
variable
BLANK_SPACE
named
BLANK_SPACE
a
BLANK_SPACE
so
NEW_LINE

TAB_ULAR

TAB_ULAR
//
BLANK_SPACE
assign
BLANK_SPACE
value
BLANK_SPACE
to
BLANK_SPACE
it
BLANK_SPACE
and
BLANK_SPACE
print
BLANK_SPACE
the
BLANK_SPACE
class
BLANK_SPACE
variable
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
a
BLANK_SPACE
=
BLANK_SPACE
3;
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
printf("output
BLANK_SPACE
should
BLANK_SPACE
be
BLANK_SPACE
3:
BLANK_SPACE
%d\n",
BLANK_SPACE
a);
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
}
NEW_LINE
};
NEW_LINE

NEW_LINE
class
BLANK_SPACE
B
BLANK_SPACE
{
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
void
BLANK_SPACE
print4()
BLANK_SPACE
{
NEW_LINE

TAB_ULAR

TAB_ULAR
//
BLANK_SPACE
there
BLANK_SPACE
is
BLANK_SPACE
no
BLANK_SPACE
class
BLANK_SPACE
variable
BLANK_SPACE
named
BLANK_SPACE
a
BLANK_SPACE
so
BLANK_SPACE
print
BLANK_SPACE
global
BLANK_SPACE
variable
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
printf("output
BLANK_SPACE
should
BLANK_SPACE
be
BLANK_SPACE
4:
BLANK_SPACE
%d\n",
BLANK_SPACE
a);
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
}
NEW_LINE
};
NEW_LINE

NEW_LINE

TAB_ULAR
//
BLANK_SPACE
simple
BLANK_SPACE
function
BLANK_SPACE
outside
BLANK_SPACE
of
BLANK_SPACE
a
BLANK_SPACE
class
BLANK_SPACE

NEW_LINE
float
BLANK_SPACE
product(float
BLANK_SPACE
a,
BLANK_SPACE
float
BLANK_SPACE
b)
BLANK_SPACE
{
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
return(
BLANK_SPACE
a*b
BLANK_SPACE
);
NEW_LINE
}
NEW_LINE

NEW_LINE

NEW_LINE

NEW_LINE
int
BLANK_SPACE
main(int
BLANK_SPACE
argc,
BLANK_SPACE
char
BLANK_SPACE
*argv[])
BLANK_SPACE
{
NEW_LINE
class
BLANK_SPACE
A
BLANK_SPACE
myA;
NEW_LINE
class
BLANK_SPACE
B
BLANK_SPACE
myB;
NEW_LINE
int
BLANK_SPACE
value;
NEW_LINE
char
BLANK_SPACE
str[100];
NEW_LINE

NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
printf("Hello
BLANK_SPACE
\"
BLANK_SPACE
there\n");
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
strcpy(str,
BLANK_SPACE
"A
BLANK_SPACE
string
BLANK_SPACE
containing
BLANK_SPACE
the
BLANK_SPACE
word
BLANK_SPACE
class
BLANK_SPACE
may
BLANK_SPACE
be
BLANK_SPACE
tricky");
NEW_LINE

NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
a
BLANK_SPACE
=
BLANK_SPACE
4;
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
value
BLANK_SPACE
=
BLANK_SPACE
1;
NEW_LINE

NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
myA.print1(value);
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
myA.print2();
NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
myA.print3();
NEW_LINE

NEW_LINE

BLANK_SPACE

BLANK_SPACE

BLANK_SPACE
myB.print4();
NEW_LINE

NEW_LINE
}
NEW_LINE

NEW_LINE


